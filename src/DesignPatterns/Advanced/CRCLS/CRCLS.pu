
@startuml CRCLS
left to right direction

!define RECTANGLE class

package "GrowthCode.DesignPatterns.Advanced.CRCLS" {
  package "User" {
    RECTANGLE "User" as User {
      +id: int
      +name: string
    }
  }

  package "Context" {
    RECTANGLE "Context" as Context {
      +recentActivities: RecentActivities
      +additionalFactors: AdditionalFactors
    }
    RECTANGLE "RecentActivities" as RecentActivities
    RECTANGLE "AdditionalFactors" as AdditionalFactors
  }

  package "Recommender" {
    interface "RecommenderStrategyInterface" as RecommenderStrategyInterface {
      +execute(): array
    }
    RECTANGLE "ContentBasedRecommender" as ContentBasedRecommender
    RECTANGLE "VideoBasedRecommender" as VideoBasedRecommender
    RECTANGLE "CourseBasedRecommender" as CourseBasedRecommender
  }

  package "Factory" {
    RECTANGLE "RecommenderFactory" as RecommenderFactory {
      +createRecommender(string): RecommenderStrategyInterface
    }
  }

  package "Observer" {
    RECTANGLE "UserActivityObserver" as UserActivityObserver {
      +update(): void
    }
  }

  package "Decorator" {
    RECTANGLE "CostFilterDecorator" as CostFilterDecorator
    RECTANGLE "DifficultyFilterDecorator" as DifficultyFilterDecorator
  }

  package "Command" {
    RECTANGLE "IgnoreContentCommand" as IgnoreContentCommand {
      +execute(): void
    }
  }

  package "Hybrid" {
    RECTANGLE "HybridRecommender" as HybridRecommender {
      +strategies: Strategies
    }
    RECTANGLE "Strategies" as Strategies
  }

  package "EventManager" {
    RECTANGLE "EventManager" as EventManager {
      +getInstance(): EventManager
    }
  }

  package "Memento" {
    RECTANGLE "RecommenderMemento" as RecommenderMemento {
      +getState(): array
      +setState(array): void
    }
  }
}

RecommenderStrategyInterface <|.. ContentBasedRecommender
RecommenderStrategyInterface <|.. VideoBasedRecommender
RecommenderStrategyInterface <|.. CourseBasedRecommender

Context o-- RecentActivities
Context o-- AdditionalFactors

RecommenderFactory ..> RecommenderStrategyInterface : <<creates>>

UserActivityObserver --> User : <<observes>>

CostFilterDecorator ..|> RecommenderStrategyInterface : <<implements>>
DifficultyFilterDecorator ..|> RecommenderStrategyInterface : <<implements>>

HybridRecommender o-- Strategies : <<uses>>

EventManager --> UserActivityObserver : <<notifies>>

RecommenderMemento -- RecommenderStrategyInterface : <<saves state>>

HybridRecommender ..> RecommenderFactory : <<uses>>
HybridRecommender ..> EventManager : <<uses>>
HybridRecommender ..> UserActivityObserver : <<uses>>

UserActivityObserver ..> EventManager : <<uses>>

IgnoreContentCommand ..> User : <<modifies>>

RecommenderFactory ..> EventManager : <<uses>>

HybridRecommender ..> Context : <<uses>>

@enduml
